{"version":3,"sources":["Components/Header/Header.js","Components/Main/Main.js","Components/News/NavSearch.js","Components/News/NewsList.js","Components/News/News.js","Components/News/newsArr.js","Components/Login/Login.js","Components/Login/auth.js","Components/Login/validAuth.js","Components/AddNews/AddNews.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","to","type","class","onClick","text","Main","NavSearch","placeholder","value","this","onChange","e","search","target","Component","user","JSON","parse","localStorage","getItem","NewsList","state","authId","setState","id","adminAuth","news","map","item","i","key","title","date","deleteNews","addNews","setItem","stringify","News","newList","filter","newS","lc","toLowerCase","includes","filtered","newsArr","splice","addedNews","concat","removeItem","window","location","reload","setTimeout","Login","handleChange","event","name","handleSubmit","preventDefault","login","password","users","$this","find","undefined","isSuccess","uresLogg","toUpperCase","slice","isLogin","isAuth","handleLogin","auth","isLoginErr","isPassError","validAuth","aria-label","aria-hidden","onSubmit","for","AddNews","history","push","rows","App","btnClick","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1cb4838a.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Header.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = (props) =>{    \r\n    return(\r\n        <header className=\"header\">\r\n            <nav className=\"nav\">\r\n                <Link to=\"/\" className=\"nav__link\">Главная</Link>\r\n                <Link to=\"/news\" className=\"nav__link\">Новости</Link>\r\n            </nav>\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-outline-info\"\r\n                onClick={props.onClick}\r\n            >{props.text}</button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Main = (props) =>{\r\n  return (\r\n    <section className=\"container\">\r\n        <h1 className=\"main__title\">Привет <span>{props.text}</span></h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\n\r\nclass NavSearch extends Component{\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n              <form className=\"form-inline\"  >\r\n                  <input \r\n                    className=\"form-control mr-sm-2\" \r\n                    type=\"search\" \r\n                    placeholder=\"Search here...\" \r\n                    value={this.props.value}\r\n                    onChange={e => this.props.search(e.target.value)}\r\n                  />\r\n              </form>\r\n          </nav>\r\n        )\r\n    }\r\n}\r\nexport default NavSearch;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nlet user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nclass NewsList extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        authId: null,\r\n      } \r\n    }\r\n    componentDidMount() {\r\n      const authId = JSON.parse(localStorage.getItem('user'))\r\n      if(authId) this.setState({authId : authId.id});\r\n    }\r\n    render() {\r\n        const adminAuth = this.state.authId === \"admin\";\r\n        return(\r\n            <ul className=\"news\">\r\n                {\r\n                  this.props.news.map((item, i )=> {\r\n                    return (\r\n                      <li key={i} className=\"news__list\">\r\n                        <div>\r\n                          <h4 className=\"news__title\">{item.title}</h4>\r\n                          <p className=\"news__text\">{item.text}</p>\r\n                          <span className=\"news__date\">{item.date}</span>\r\n                        </div>\r\n                        \r\n                        { adminAuth ? \r\n                          <button\r\n                            type=\"button\" \r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => this.props.deleteNews(i)}\r\n                          >Удалить</button> : null}\r\n                      </li>\r\n                    )\r\n                  })\r\n                }\r\n                {\r\n                  this.props.addNews !== null ? \r\n                  <li className={user == null ? \"news__list news__list_none\":\"news__list\"}>\r\n                    <div>\r\n                      <h4 className=\"news__title\">{this.props.addNews.title}</h4>\r\n                      <p className=\"news__text\">{this.props.addNews.text}</p>\r\n                      <span className=\"news__date\">{this.props.addNews.date}</span>\r\n                      <span className=\"news__msg\">На одобрении</span>\r\n                    </div> \r\n                    { adminAuth ? \r\n                      <button \r\n                        type=\"button\" \r\n                        className=\"btn btn-success\"\r\n                        onClick={()=> this.props.onClick()}\r\n                      >Одобрить</button> : null} \r\n                  </li> : null\r\n                }\r\n          </ul>\r\n        )\r\n    }\r\n}\r\nexport default NewsList;","import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './News.css'\r\nimport NavSearch from './NavSearch';\r\nimport NewsList from './NewsList';\r\nimport {newsArr} from './newsArr'\r\n\r\nlet addNews = JSON.parse(localStorage.getItem(\"addNews\"));\r\nlet news = JSON.parse(localStorage.getItem(\"newsArr\"));\r\nif(news === null) localStorage.setItem(\"newsArr\", JSON.stringify(newsArr));\r\n\r\nclass News extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      news : news,\r\n      filtered : [],\r\n    }\r\n  }\r\n\r\n  search = search => {\r\n    let currentNews = [];\r\n    let newList = [];\r\n    if(search !== \"\") {\r\n      currentNews = this.state.news;\r\n      newList = currentNews.filter(newS => {\r\n        const lc = newS.title.toLowerCase();\r\n        const filter = search.toLowerCase();\r\n        return lc.includes(filter);\r\n      });\r\n    } else {\r\n      newList = this.state.news;\r\n    }\r\n    this.setState({filtered : newList});\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({filtered : this.state.news});\r\n  }\r\n  componentWillUnmount() {\r\n    if(news === null) setTimeout(()=>{window.location.reload()},0)\r\n  }\r\n \r\n  deleteNews = i =>{\r\n    const newsArr = this.state.news\r\n    newsArr.splice(i, 1);\r\n    this.setState({news : newsArr})\r\n    localStorage.setItem(\"newsArr\", JSON.stringify(newsArr));\r\n  }\r\n  addNews = () => {\r\n    let addedNews = this.state.news.concat(addNews)\r\n    this.setState({news : addedNews})\r\n    localStorage.setItem(\"newsArr\", JSON.stringify(addedNews))\r\n    localStorage.removeItem(\"addNews\");\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"container news\"> \r\n          <h1>Новости</h1>\r\n          {this.props.addNews}\r\n          <NavSearch value={this.state.value} search={this.search}/>\r\n          <NewsList \r\n            news={this.state.filtered} \r\n            deleteNews={this.deleteNews} \r\n            onClick={this.addNews}\r\n            addNews={addNews}\r\n          />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default News;","\r\nexport const newsArr = [\r\n        {\r\n            title : \"Server Side Rendering для React App на Express.js\",\r\n            text : \"На написание этой статьи меня сподвигло отсутствие какого-либо более-менее полного мануала, как же сделать Server Side Rendering для React приложения\",\r\n            date : \"01-01-2020\"\r\n        },\r\n        {\r\n            title : \"Использование XMLHttpRequest\",\r\n            text : \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour,\",\r\n            date : \"01-15-2020\"\r\n        },\r\n        {\r\n            title : \"Методы массивов\",\r\n            text : \"There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour,\",\r\n            date : \"01-20-2020\"\r\n        }\r\n    ];","import React, { Component }from 'react';\r\nimport auth from './auth';\r\nimport validAuth from './validAuth'\r\nimport './Login.css'\r\nclass Login extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            login : \"\",\r\n            password : \"\",\r\n            users : [\r\n                {id:\"user\", login: \"user\", password: \"user\"},\r\n                {id:\"admin\", login: \"admin\", password: \"admin\"},\r\n            ],\r\n            isSuccess: false,\r\n            isAuth: false,\r\n            isLoginErr: false,\r\n            isPassError: false,\r\n        }\r\n    }\r\n    handleChange = event => {\r\n        this.setState({[event.target.name] : event.target.value});\r\n    }\r\n    \r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const {login, password, users} = this.state;\r\n        auth(login, password, users, this);\r\n        validAuth(login, password, this);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className={this.props.className}>\r\n                    <button \r\n                        type=\"button \" \r\n                        className=\"close button_close\" \r\n                        aria-label=\"Close\" \r\n                        onClick={this.props.onClick}>\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n\r\n                    <form className=\"form\" onSubmit={this.handleSubmit}> \r\n                            { this.state.isSuccess ? \r\n                                <div className=\"form__error\">Неверный логин или пароль</div> : null\r\n                            }\r\n                        <div className=\"form-group\">\r\n                            <label for=\"login\">Login</label>\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"form-control\" \r\n                                id=\"login\" \r\n                                placeholder=\"Enter login\" \r\n                                name=\"login\"\r\n                                value={this.state.login}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            { this.state.isLoginErr ? \r\n                                <div className=\"form__error\">Заполните поле логин корректно</div> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"password\">Password</label>\r\n                            <input \r\n                                type=\"password\" \r\n                                className=\"form-control\" \r\n                                id=\"password\" \r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            { this.state.isPassError ? \r\n                                <div className=\"form__error\"> Заполните поле пароль корректно</div> : null\r\n                            }\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-outline-info\">Вход</button>\r\n                    </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","export default (login, password, users, $this) => {\r\n    let user = users.find(item => {\r\n        if(item.login === login) return item.login\r\n        if(item.password === password) return item.password\r\n    })\r\n    if(user === undefined) {\r\n        $this.setState({isSuccess : true});\r\n        return false\r\n    } else if(user.login === login && user.password === password) {\r\n        let uresLogg = {\r\n            id : user.id,\r\n            login : login[0].toUpperCase() + login.slice(1),\r\n            isLogin : true,\r\n        }\r\n        localStorage.setItem(\"user\", JSON.stringify(uresLogg))\r\n        $this.setState({\r\n            login:\"\",\r\n            password:\"\",\r\n            isAuth: true,\r\n            isSuccess : false\r\n        })\r\n        $this.props.handleLogin()\r\n        window.location.reload();\r\n    }\r\n}\r\n","export default (login, password, $this) =>{\r\n    (login < 3) ?\r\n        $this.setState({isLoginErr: true}) : $this.setState({isLoginErr: false});\r\n    (password < 3) ?\r\n        $this.setState({isPassError: true}) : $this.setState({isPassError: false});\r\n}","import React, { Component } from 'react';\r\nimport {Link, withRouter, Redirect} from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AddNews.css'\r\n\r\nlet addNews = JSON.parse(localStorage.getItem(\"addNews\"));\r\nlet user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nclass AddNews extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title : \"\",\r\n            text: \"\",\r\n            date : \"\",\r\n            isLogin: false,\r\n        }\r\n    }\r\n    handleChange = event => {\r\n        this.setState({[event.target.name] : event.target.value});\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        let {title, text, date } = this.state;\r\n        let addNews = {\r\n            title : this.state.title,\r\n            text : this.state.text,\r\n            date : this.state.date,\r\n        }\r\n        if(!title < 10 && !text < 50 && date !== \"\") {\r\n            localStorage.setItem(\"addNews\", JSON.stringify(addNews))\r\n            this.props.history.push('/news');\r\n            window.location.reload();\r\n        }\r\n    }\r\n    render() {\r\n        if(user === null || addNews) return <Redirect to=\"/news\"/>\r\n        return(\r\n            <div className=\"addNews\">\r\n                <Link to=\"/news\" className=\"addNews__link\">Вернуться назад</Link>\r\n                <form onSubmit={this.handleSubmit} className=\"addNews__form\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">Название </label>\r\n                        <input type=\"text\" class=\"form-control\" \r\n                        id=\"name\" name=\"title\" \r\n                        onChange={this.handleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">Текст для новостей</label>\r\n                        <textarea class=\"form-control\" \r\n                        id=\"text\" name=\"text\" rows=\"10\" \r\n                        onChange={this.handleChange} value={this.state.text}></textarea>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"date\">Дата публикации</label>\r\n                        <input type=\"date\" class=\"form-control\" \r\n                        id=\"date\" name=\"date\" \r\n                        onChange={this.handleChange} value={this.state.date}/>\r\n                    </div>\r\n    \r\n                    <button type=\"submit\" class=\"btn btn-outline-info\">Добавить</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n};\r\nexport default AddNews;","import React, { Component } from 'react';\nimport Header from './Components/Header/Header';\nimport Main from './Components/Main/Main';\nimport News from './Components/News/News';\nimport Login  from './Components/Login/Login';\nimport AddNews from './Components/AddNews/AddNews';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n        user: \"\",\n        btnClick : false,\n        isLogin: false,\n    }\n  }\n\n  componentDidMount() {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user) this.setState({\n      isLogin : user.isLogin,\n      user: user.login\n    });\n  }\n\n  handleLogin = () => {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n      this.setState({\n          btnClick: false,\n          isLogin : user.isLogin,\n          user : user.login\n      })\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header \n            text={this.state.isLogin? \"Выйти\" : \"Войти\"}\n            onClick={ this.state.isLogin ? \n                ()=> {\n                      this.setState({\n                      btnClick: false,\n                      isLogin : false,\n                      user: \"\"\n                    })\n                    localStorage.removeItem(\"user\");\n                    window.location.reload();\n                    } :\n                    ()=> this.setState({btnClick: true})\n                }\n          />\n          <Switch>\n            <Route exact path=\"/\">\n              <Main \n                handleLogin={this.handleLogin}\n                text={this.state.user ? this.state.user :\"Гость\"}\n              />\n            </Route>\n            <Route  path=\"/news\">\n              <News \n              addNews={\n                this.state.isLogin ? \n                <Link to=\"/addnews\">Добавить новость</Link> \n                : \n                <p>Для добавления новости авторизируйтесь</p> \n              }\n              />\n            </Route>\n            <Route path=\"/addnews\" component={AddNews}/>\n          </Switch>\n          <Login \n            handleLogin={this.handleLogin} \n            className={this.state.btnClick ? \"popUp popUp_active\" : \"popUp\"}\n            onClick={()=> this.setState({btnClick: false})}\n          />\n        </Router>\n      </div>\n    );\n  }  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}